[{"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\index.tsx":"1","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\api\\agent.ts":"4","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"5","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\activityStore.ts":"6","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\nav\\NavBar.tsx":"7","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"8","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"9","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"10","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"11","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\store.ts":"12","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\home\\HomePage.tsx":"13","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostList.tsx":"14","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\postStore.ts":"15","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostForm.tsx":"16","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostWarning.tsx":"17","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\postDashboard\\PostDashboard.tsx":"18","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"19","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"20","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"21","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"22","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"23","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"24"},{"size":782,"mtime":1614001390098,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1612884386522,"results":"27","hashOfConfig":"26"},{"size":1788,"mtime":1614003503023,"results":"28","hashOfConfig":"26"},{"size":1558,"mtime":1614002805806,"results":"29","hashOfConfig":"26"},{"size":401,"mtime":1613030271340,"results":"30","hashOfConfig":"26"},{"size":4543,"mtime":1614005757151,"results":"31","hashOfConfig":"26"},{"size":1153,"mtime":1614002864912,"results":"32","hashOfConfig":"26"},{"size":942,"mtime":1614002685584,"results":"33","hashOfConfig":"26"},{"size":1203,"mtime":1614007899638,"results":"34","hashOfConfig":"26"},{"size":3879,"mtime":1614003237254,"results":"35","hashOfConfig":"26"},{"size":1477,"mtime":1614009025584,"results":"36","hashOfConfig":"26"},{"size":357,"mtime":1613379190231,"results":"37","hashOfConfig":"26"},{"size":423,"mtime":1614000097565,"results":"38","hashOfConfig":"26"},{"size":2767,"mtime":1613983038317,"results":"39","hashOfConfig":"26"},{"size":4427,"mtime":1613752735460,"results":"40","hashOfConfig":"26"},{"size":2987,"mtime":1613981968338,"results":"41","hashOfConfig":"26"},{"size":1595,"mtime":1613981618616,"results":"42","hashOfConfig":"26"},{"size":379,"mtime":1613980275844,"results":"43","hashOfConfig":"26"},{"size":268,"mtime":1614001048820,"results":"44","hashOfConfig":"26"},{"size":1469,"mtime":1614004440674,"results":"45","hashOfConfig":"26"},{"size":365,"mtime":1614008596745,"results":"46","hashOfConfig":"26"},{"size":359,"mtime":1614008740447,"results":"47","hashOfConfig":"26"},{"size":359,"mtime":1614008740468,"results":"48","hashOfConfig":"26"},{"size":368,"mtime":1614008806870,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wm7pc1",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\index.tsx",["104","105"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\reportWebVitals.ts",[],["106","107"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\App.tsx",["108","109","110"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\api\\agent.ts",["111"],"import axios, {AxiosResponse }from 'axios';\r\nimport { IActivity } from '../models/activity';\r\nimport { IPost } from '../models/post';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (responce: AxiosResponse) => responce.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(()=> resolve(response), ms))\r\n\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(250)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(250)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(250)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(250)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post(`/activities`, activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n}\r\n\r\nconst Posts = {\r\n    list: (): Promise<IPost[]> => requests.get('/posts'),\r\n    details: (id: string) => requests.get(`/posts/${id}`),\r\n    create: (post: IPost) => requests.post(`/posts`, post),\r\n    update: (post: IPost) => requests.put(`/posts/${post.id}`, post),\r\n    delete: (id: string) => requests.del(`/posts/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities,\r\n    Posts\r\n}","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\nav\\NavBar.tsx",["112","113"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["114"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["115","116","117","118","119"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\store.ts",[],["120","121"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostList.tsx",["122","123","124","125","126","127","128","129","130"],"import { observer } from 'mobx-react-lite';\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport {Item, Button, Label, Segment, Grid, Container, TextArea, Form, Pagination, Modal, Icon, Divider} from 'semantic-ui-react';\r\nimport PostStore from '../../app/stores/postStore'\r\nimport {makeAutoObservable} from 'mobx';\r\nimport { Link } from 'react-router-dom';\r\nimport PostWarning from './PostWarning';\r\n\r\nconst PostList: React.FC = () => {\r\n\r\n    const postStore = useContext(PostStore);\r\n    const {postsByDate, selectPost, deletePost, submitting, target} = postStore;\r\n\r\n    useEffect(() => {\r\n        postStore.loadPosts();\r\n    }, [postStore])\r\n    \r\n    if (postStore.postRegistry===undefined) \r\n        return (\r\n          <Segment textAlign={\"center\"}>\r\n              <p>\r\n              No posts created yet, click <Button color={\"green\"} >here</Button> to create' Title if no posts\r\n              </p>          \r\n          </Segment>  \r\n        );\r\n    \r\n    return (\r\n        <Segment clearing>\r\n            <Item.Group divided>\r\n                {postsByDate.map(post =>(\r\n                    <Item key={post.id}>\r\n                        <Item.Content>\r\n                            <Grid.Column floated='left' width={14}>\r\n                                <Item.Header as='a'>{post.title}</Item.Header>\r\n                                {/*<Container text content={post.body}></Container>*/}\r\n                                <Form>\r\n                                    <TextArea as={TextArea} rows={3} placeholder='Tell us more' value={post.body} />\r\n                                </Form>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated='right' width={2}>\r\n                                <Item.Meta>{post.lastUpdatedDate}</Item.Meta>\r\n                                <PostWarning />\r\n                                <Button \r\n                                    // onClick={() => selectPost(post.id)}\r\n                                    as={Link} to={`/posts/${post.id}`}\r\n                                    color='blue' content='View' floated={\"right\"}/>\r\n                            </Grid.Column>  \r\n                        </Item.Content>\r\n                    </Item>\r\n                ))}\r\n            </Item.Group>\r\n            <Container textAlign={\"center\"}>\r\n            <Divider/>   \r\n            <Pagination\r\n                boundaryRange={1}\r\n                defaultActivePage={1}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={1}\r\n                totalPages={10}\r\n            />\r\n            </Container>\r\n        </Segment>\r\n        \r\n    );\r\n    \r\n    \r\n}\r\n\r\nexport default observer(PostList)","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\postStore.ts",["131","132","133"],"import {action, computed, makeAutoObservable, observable, runInAction} from \"mobx\";\r\nimport {createContext, SyntheticEvent, useEffect} from 'react';\r\nimport { IPost } from '../models/post';\r\nimport agent from \"../api/agent\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {IActivity} from \"../models/activity\";\r\n\r\n\r\nexport class PostStore {\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    @observable postRegistry = new Map();\r\n    @observable posts: IPost[] = [];\r\n    @observable post: IPost | undefined = undefined;\r\n    @observable loadingInitial = false;\r\n    @observable editMode = false;\r\n    @observable submitting = false;\r\n    @observable target = '';\r\n\r\n    @computed get postsByDate() {\r\n        return Array.from(this.postRegistry.values()).slice().sort(\r\n               (a,b) => Date.parse(a.date) - Date.parse(b.date))\r\n    }\r\n    \r\n    @action selectPost = (id: string) => {\r\n        this.post = this.postRegistry.get(id);\r\n        this.editMode = false;\r\n    };\r\n    \r\n    @action loadPosts = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const posts = await agent.Posts.list();\r\n            runInAction(() => {\r\n                posts.forEach(post => {\r\n                    post.createdDate = post.createdDate.split('T')[0];\r\n                    post.lastUpdatedDate = post.lastUpdatedDate.split('T')[0];\r\n                    this.postRegistry.set(post.id, post);\r\n                });\r\n                this.loadingInitial = false;\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loadingInitial = false;\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    @action loadPost = async (id: string) => {\r\n        let post = this.getPost(id);\r\n        if (post) {\r\n            this.post = post;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                post = await agent.Posts.details(id);\r\n                runInAction(() => {\r\n                    this.post = post;\r\n                    this.loadingInitial = false;\r\n                })\r\n            } catch (error) {\r\n                runInAction(() => {\r\n                    this.loadingInitial = false;\r\n                })\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n   \r\n    getPost = (id: string) => {\r\n        return this.postRegistry.get(id);\r\n    }\r\n\r\n    @action setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    @action createPost = async (post: IPost) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Posts.create(post);\r\n            runInAction( () => {\r\n                this.postRegistry.set(post.id, post);\r\n                this.editMode = false;\r\n                this.submitting = false;\r\n            })\r\n        } catch (error) {\r\n            runInAction( () => {\r\n                this.submitting = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    @action editPost = async (post: IPost) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Posts.update(post);\r\n            runInAction(() => {\r\n                this.postRegistry.set(post.id, post);\r\n                this.post = post;\r\n                this.editMode = false;\r\n                this.submitting = false;\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            });\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    @action deletePost = async  (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        this.submitting = true;\r\n        this.target = event.currentTarget.name;\r\n        try {\r\n            await  agent.Posts.delete(id);\r\n            runInAction(() => {\r\n                this.postRegistry.delete(id);\r\n                this.submitting = false;\r\n                this.target = '';\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n                this.target = '';\r\n            });\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    \r\n    @action cancelFormOpen = () => {\r\n        this.editMode = false;\r\n    }\r\n\r\n    @action openEditForm  = (id: string) => {\r\n        this.post = this.postRegistry.get(id);\r\n        this.editMode = true;\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default createContext(new PostStore());","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostForm.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostWarning.tsx",["134","135","136","137","138","139","140","141","142","143","144","145","146"],"import { observer } from 'mobx-react-lite';\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport {\r\n    Item,\r\n    Button,\r\n    Label,\r\n    Segment,\r\n    Grid,\r\n    Container,\r\n    TextArea,\r\n    Form,\r\n    Message,\r\n    Divider,\r\n    Modal, Icon\r\n} from 'semantic-ui-react';\r\nimport PostStore from '../../app/stores/postStore'\r\nimport {makeAutoObservable} from 'mobx';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostWarning: React.FC = () => {\r\n\r\n    const postStore = useContext(PostStore);\r\n    const {openEditForm} = postStore;\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    \r\n    return(\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Button color='red' content='Delete' floated='left'/>}\r\n        >\r\n            <Modal.Content style={{textAlign: 'center'}}>\r\n                <h2>Warning</h2>\r\n                <p>\r\n                    Are you sure you would like to delete?\r\n                </p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='green' inverted onClick={() => {setOpen(false); }}>\r\n                    <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='red' inverted onClick={(e) => {setOpen(false); /* deletePost(e, post.id); */} }>\r\n                    <Icon name='checkmark' /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(PostWarning)","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\postDashboard\\PostDashboard.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",["147","148","149","150","151","152"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",["153","154","155","156","157","158"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",["159","160","161","162","163","164"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",["165","166","167","168","169","170"],{"ruleId":"171","severity":1,"message":"172","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":15},{"ruleId":"171","severity":1,"message":"175","line":7,"column":17,"nodeType":"173","messageId":"174","endLine":7,"endColumn":29},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"180","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":16},{"ruleId":"171","severity":1,"message":"181","line":12,"column":8,"nodeType":"173","messageId":"174","endLine":12,"endColumn":16},{"ruleId":"171","severity":1,"message":"182","line":13,"column":8,"nodeType":"173","messageId":"174","endLine":13,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":36,"column":1,"nodeType":"185","endLine":39,"endColumn":2},{"ruleId":"171","severity":1,"message":"186","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":27},{"ruleId":"171","severity":1,"message":"187","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":18},{"ruleId":"171","severity":1,"message":"188","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":27},{"ruleId":"171","severity":1,"message":"189","line":3,"column":9,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"190","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"191","line":4,"column":16,"nodeType":"173","messageId":"174","endLine":4,"endColumn":21},{"ruleId":"171","severity":1,"message":"192","line":4,"column":23,"nodeType":"173","messageId":"174","endLine":4,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":23,"column":8,"nodeType":"195","endLine":23,"endColumn":22,"suggestions":"196"},{"ruleId":"176","replacedBy":"197"},{"ruleId":"178","replacedBy":"198"},{"ruleId":"171","severity":1,"message":"199","line":2,"column":39,"nodeType":"173","messageId":"174","endLine":2,"endColumn":47},{"ruleId":"171","severity":1,"message":"200","line":3,"column":23,"nodeType":"173","messageId":"174","endLine":3,"endColumn":28},{"ruleId":"171","severity":1,"message":"201","line":3,"column":84,"nodeType":"173","messageId":"174","endLine":3,"endColumn":89},{"ruleId":"171","severity":1,"message":"202","line":3,"column":91,"nodeType":"173","messageId":"174","endLine":3,"endColumn":95},{"ruleId":"171","severity":1,"message":"188","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":27},{"ruleId":"171","severity":1,"message":"203","line":12,"column":25,"nodeType":"173","messageId":"174","endLine":12,"endColumn":35},{"ruleId":"171","severity":1,"message":"204","line":12,"column":37,"nodeType":"173","messageId":"174","endLine":12,"endColumn":47},{"ruleId":"171","severity":1,"message":"205","line":12,"column":49,"nodeType":"173","messageId":"174","endLine":12,"endColumn":59},{"ruleId":"171","severity":1,"message":"206","line":12,"column":61,"nodeType":"173","messageId":"174","endLine":12,"endColumn":67},{"ruleId":"171","severity":1,"message":"207","line":2,"column":24,"nodeType":"173","messageId":"174","endLine":2,"endColumn":33},{"ruleId":"171","severity":1,"message":"208","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":18},{"ruleId":"171","severity":1,"message":"209","line":6,"column":9,"nodeType":"173","messageId":"174","endLine":6,"endColumn":18},{"ruleId":"171","severity":1,"message":"207","line":2,"column":28,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"210","line":4,"column":5,"nodeType":"173","messageId":"174","endLine":4,"endColumn":9},{"ruleId":"171","severity":1,"message":"200","line":6,"column":5,"nodeType":"173","messageId":"174","endLine":6,"endColumn":10},{"ruleId":"171","severity":1,"message":"211","line":7,"column":5,"nodeType":"173","messageId":"174","endLine":7,"endColumn":12},{"ruleId":"171","severity":1,"message":"212","line":8,"column":5,"nodeType":"173","messageId":"174","endLine":8,"endColumn":9},{"ruleId":"171","severity":1,"message":"213","line":9,"column":5,"nodeType":"173","messageId":"174","endLine":9,"endColumn":14},{"ruleId":"171","severity":1,"message":"214","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"215","line":11,"column":5,"nodeType":"173","messageId":"174","endLine":11,"endColumn":9},{"ruleId":"171","severity":1,"message":"216","line":12,"column":5,"nodeType":"173","messageId":"174","endLine":12,"endColumn":12},{"ruleId":"171","severity":1,"message":"217","line":13,"column":5,"nodeType":"173","messageId":"174","endLine":13,"endColumn":12},{"ruleId":"171","severity":1,"message":"188","line":17,"column":9,"nodeType":"173","messageId":"174","endLine":17,"endColumn":27},{"ruleId":"171","severity":1,"message":"189","line":18,"column":10,"nodeType":"173","messageId":"174","endLine":18,"endColumn":14},{"ruleId":"171","severity":1,"message":"218","line":23,"column":12,"nodeType":"173","messageId":"174","endLine":23,"endColumn":24},{"ruleId":"171","severity":1,"message":"210","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":22},{"ruleId":"171","severity":1,"message":"211","line":2,"column":24,"nodeType":"173","messageId":"174","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"202","line":2,"column":33,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"189","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"209","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"210","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":22},{"ruleId":"171","severity":1,"message":"211","line":2,"column":24,"nodeType":"173","messageId":"174","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"202","line":2,"column":33,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"189","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"209","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"210","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":22},{"ruleId":"171","severity":1,"message":"211","line":2,"column":24,"nodeType":"173","messageId":"174","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"202","line":2,"column":33,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"189","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"209","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"210","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"192","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":22},{"ruleId":"171","severity":1,"message":"211","line":2,"column":24,"nodeType":"173","messageId":"174","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"202","line":2,"column":33,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"189","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"209","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'StoreContext' is defined but never used.","no-native-reassign",["219"],"no-negated-in-lhs",["220"],"'PostList' is defined but never used.","'PostForm' is defined but never used.","'PostDashboard' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'useStore' is defined but never used.","'makeAutoObservable' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["221"],["219"],["220"],"'useState' is defined but never used.","'Label' is defined but never used.","'Modal' is defined but never used.","'Icon' is defined but never used.","'selectPost' is assigned a value but never used.","'deletePost' is assigned a value but never used.","'submitting' is assigned a value but never used.","'target' is assigned a value but never used.","'useEffect' is defined but never used.","'observer' is defined but never used.","'IActivity' is defined but never used.","'Item' is defined but never used.","'Segment' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'TextArea' is defined but never used.","'Form' is defined but never used.","'Message' is defined but never used.","'Divider' is defined but never used.","'openEditForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [loadActivity, match.params.id]",{"range":"224","text":"225"},[952,966],"[loadActivity, match.params.id]"]