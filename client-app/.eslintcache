[{"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\index.tsx":"1","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\api\\agent.ts":"4","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"5","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\activityStore.ts":"6","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\nav\\NavBar.tsx":"7","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"8","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"9","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"10","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"11","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\store.ts":"12","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\home\\HomePage.tsx":"13","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostList.tsx":"14","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\postStore.ts":"15"},{"size":705,"mtime":1613633347859,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1612884386522,"results":"18","hashOfConfig":"17"},{"size":1382,"mtime":1613650504018,"results":"19","hashOfConfig":"17"},{"size":1587,"mtime":1613664370913,"results":"20","hashOfConfig":"17"},{"size":401,"mtime":1613030271340,"results":"21","hashOfConfig":"17"},{"size":4770,"mtime":1613648616655,"results":"22","hashOfConfig":"17"},{"size":1097,"mtime":1613646027359,"results":"23","hashOfConfig":"17"},{"size":1100,"mtime":1613668025184,"results":"24","hashOfConfig":"17"},{"size":2266,"mtime":1613633839871,"results":"25","hashOfConfig":"17"},{"size":3510,"mtime":1613633069598,"results":"26","hashOfConfig":"17"},{"size":1945,"mtime":1613640923101,"results":"27","hashOfConfig":"17"},{"size":357,"mtime":1613379190231,"results":"28","hashOfConfig":"17"},{"size":310,"mtime":1613634149570,"results":"29","hashOfConfig":"17"},{"size":1930,"mtime":1613669610236,"results":"30","hashOfConfig":"17"},{"size":2414,"mtime":1613669465674,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"wm7pc1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\index.tsx",["70","71"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './app/stores/store';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n      <BrowserRouter>\r\n          <App />   \r\n      </BrowserRouter>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["72","73"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\App.tsx",["74","75","76","77"],"import React, { useEffect, Fragment, useContext} from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ActivityStore from '../stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route } from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport PostList from '../../features/posts/PostList';\r\n// import { useStore } from '../stores/store';\r\n\r\nconst App = () => {\r\n    \r\n  return (\r\n    <Fragment>\r\n        <NavBar />\r\n        <Container style={{marginTop: '7em'}}>\r\n            <Route exact path='/' component={HomePage}/>\r\n            <Route exact path='/activities' component={ActivityDashboard}/>\r\n            <Route path='/activities/:id' component={ActivityDetails}/>\r\n            <Route path='/createActivity' component={ActivityForm}/>\r\n            <Route path='/posts' component={PostList}/>\r\n            {/*<ActivityDashboard />*/}\r\n        </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\api\\agent.ts",["78"],"import axios, {AxiosResponse }from 'axios';\r\nimport { IActivity } from '../models/activity';\r\nimport { IPost } from '../models/post';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (responce: AxiosResponse) => responce.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(()=> resolve(response), ms))\r\n\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post(`/activities`, activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n}\r\n\r\nconst Posts = {\r\n    list: (): Promise<IPost[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (post: IPost) => requests.post(`/activities`, post),\r\n    update: (post: IPost) => requests.put(`/activities/${post.id}`, post),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities,\r\n    Posts\r\n}","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\nav\\NavBar.tsx",["79","80"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Container, Menu, Button } from 'semantic-ui-react';\r\nimport ActivityStore from '../../app/stores/activityStore';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\n\r\nconst NavBar: React.FC = () => {\r\n    \r\n    const activityStore = useContext(ActivityStore);\r\n\r\n    return (\r\n        <Menu fixed='top' inverted>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header >\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\r\n                    dotReact\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/posts' name='Posts'/>\r\n            </Container>\r\n        </Menu> \r\n    );\r\n};\r\n\r\n\r\nexport default observer(NavBar)","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["81","82","83","84"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["85","86"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport { Item, Button, Label, Segment } from 'semantic-ui-react';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\nimport {makeAutoObservable} from 'mobx';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ActivityList: React.FC = () => {\r\n    \r\n    const activityStore = useContext(ActivityStore);\r\n    const {activitiesByDate, selectActivity, deleteActivity, submitting, target} = activityStore;\r\n    \r\n    return (\r\n        <Segment clearing>\r\n            <Item.Group divided>\r\n                {activitiesByDate.map(activity =>(\r\n                    <Item key={activity.id}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>{activity.title}</Item.Header>\r\n                            <Item.Meta>{activity.date}</Item.Meta>\r\n                            <Item.Description>\r\n                                <div>{activity.description}</div>\r\n                                <div>{activity.city}, {activity.venue}</div>\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Button\r\n                                    as={Link} to={`/activities/${activity.id}`}\r\n                                    floated='right' \r\n                                    content='View' \r\n                                    color='blue' \r\n                                />\r\n                                <Button\r\n                                    name={activity.id}\r\n                                    loading={target === activity.id && submitting}\r\n                                    onClick={(e) => deleteActivity(e, activity.id)}\r\n                                    floated='right'\r\n                                    content='Delete'\r\n                                    color='red'\r\n                                />\r\n                                <Label basic content={activity.category} />\r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n                ))}\r\n                \r\n            </Item.Group>\r\n        </Segment>\r\n        \r\n    );\r\n};\r\n\r\nexport default observer(ActivityList)","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["87","88"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Card, Image, Button } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\n\r\ninterface DetailsParams {\r\n    id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailsParams>> = ({match}) => {\r\n    \r\n    const activityStore = useContext(ActivityStore);\r\n    const {activity, openEditForm, cancelSelectedActivity, loadActivity, loadingInitial} = activityStore;\r\n    \r\n    useEffect(() => {\r\n        loadActivity(match.params.id)    \r\n    }, [loadActivity]\r\n    )\r\n    \r\n    if (loadingInitial || !activity) return <LoadingComponent content='Loading activity...' />\r\n    \r\n    return (\r\n        <Card fluid>\r\n            <Image src={`../assets/categoryImages/${activity!.category}.jpg`} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{activity!.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span>{activity!.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity!.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths={2}>\r\n                    <Button onClick={() => openEditForm(activity!.id)} \r\n                            basic \r\n                            color='blue' \r\n                            content='Edit'/>\r\n                    <Button onClick={() => window.history.back} \r\n                            basic\r\n                            color='grey'\r\n                            content='Cancel'/>\r\n                </Button.Group>    \r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetails)","C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\store.ts",[],["89","90"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\features\\posts\\PostList.tsx",["91","92","93","94","95","96","97","98","99"],"C:\\Users\\lesyk\\RiderProjects\\dotReact\\client-app\\src\\app\\stores\\postStore.ts",["100","101"],{"ruleId":"102","severity":1,"message":"103","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"102","severity":1,"message":"106","line":7,"column":17,"nodeType":"104","messageId":"105","endLine":7,"endColumn":29},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"102","severity":1,"message":"111","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"112","line":1,"column":38,"nodeType":"104","messageId":"105","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"113","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"102","severity":1,"message":"114","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":36,"column":1,"nodeType":"117","endLine":39,"endColumn":2},{"ruleId":"102","severity":1,"message":"118","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":18},{"ruleId":"102","severity":1,"message":"119","line":11,"column":11,"nodeType":"104","messageId":"105","endLine":11,"endColumn":24},{"ruleId":"102","severity":1,"message":"120","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":23},{"ruleId":"102","severity":1,"message":"121","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"122","line":13,"column":12,"nodeType":"104","messageId":"105","endLine":13,"endColumn":20},{"ruleId":"102","severity":1,"message":"123","line":13,"column":22,"nodeType":"104","messageId":"105","endLine":13,"endColumn":30},{"ruleId":"102","severity":1,"message":"124","line":5,"column":9,"nodeType":"104","messageId":"105","endLine":5,"endColumn":27},{"ruleId":"102","severity":1,"message":"125","line":11,"column":30,"nodeType":"104","messageId":"105","endLine":11,"endColumn":44},{"ruleId":"102","severity":1,"message":"126","line":15,"column":36,"nodeType":"104","messageId":"105","endLine":15,"endColumn":58},{"ruleId":"127","severity":1,"message":"128","line":19,"column":8,"nodeType":"129","endLine":19,"endColumn":22,"suggestions":"130"},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","replacedBy":"132"},{"ruleId":"102","severity":1,"message":"133","line":3,"column":15,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"134","line":3,"column":23,"nodeType":"104","messageId":"105","endLine":3,"endColumn":28},{"ruleId":"102","severity":1,"message":"135","line":3,"column":39,"nodeType":"104","messageId":"105","endLine":3,"endColumn":43},{"ruleId":"102","severity":1,"message":"136","line":3,"column":45,"nodeType":"104","messageId":"105","endLine":3,"endColumn":54},{"ruleId":"102","severity":1,"message":"137","line":3,"column":56,"nodeType":"104","messageId":"105","endLine":3,"endColumn":64},{"ruleId":"102","severity":1,"message":"138","line":3,"column":66,"nodeType":"104","messageId":"105","endLine":3,"endColumn":70},{"ruleId":"102","severity":1,"message":"124","line":5,"column":9,"nodeType":"104","messageId":"105","endLine":5,"endColumn":27},{"ruleId":"102","severity":1,"message":"139","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":14},{"ruleId":"102","severity":1,"message":"140","line":11,"column":25,"nodeType":"104","messageId":"105","endLine":11,"endColumn":35},{"ruleId":"102","severity":1,"message":"111","line":2,"column":24,"nodeType":"104","messageId":"105","endLine":2,"endColumn":33},{"ruleId":"102","severity":1,"message":"141","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'StoreContext' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'LoadingComponent' is defined but never used.","'ActivityStore' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useStore' is defined but never used.","'activityStore' is assigned a value but never used.","'ActivityDetails' is defined but never used.","'ActivityForm' is defined but never used.","'editMode' is assigned a value but never used.","'activity' is assigned a value but never used.","'makeAutoObservable' is defined but never used.","'selectActivity' is assigned a value but never used.","'cancelSelectedActivity' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],"'Button' is defined but never used.","'Label' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'TextArea' is defined but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'selectPost' is assigned a value but never used.","'observer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [loadActivity, match.params.id]",{"range":"147","text":"148"},[729,743],"[loadActivity, match.params.id]"]